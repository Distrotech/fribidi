{"name":"Fribidi","tagline":"Mirror of git://anongit.freedesktop.org/fribidi/fribidi","body":"This is GNU FriBidi\r\nThe Free Implementation of the Unicode Bidirectional Algorithm.\r\n\r\nBackground\r\n==========\r\n\r\nOne of the missing links stopping the penetration of free software in Middle\r\nEast is the lack of support for the Arabic and Hebrew alphabets. In order to\r\nhave proper Arabic and Hebrew support, the BiDi algorithm should have been\r\nimplemented. It is our hope that this library will stimulate more free\r\nsoftware in the Middle Eastern countries.\r\n\r\nAudience\r\n========\r\n\r\nIt is our hope that this library will stimulate the implementation of Hebrew\r\nand Arabic in lots of free software. Here is a small list of projects that\r\nwould benefit from the use of the GNU FriBidi library, but of course there are\r\nmany more: Wine, Mozilla, Qt, KDE, lynx, OpenOffice.\r\n\r\nGNU FriBidi is already being used in projects like Pango (resulting in GTK+\r\nand GNOME using GNU FriBidi), AbiWord, MLTerm, MPlayer, and BiCon.\r\n\r\nDependencies\r\n============\r\n\r\nCurrently GNU FriBidi does not depend on any other library, but uses Glib if\r\navailable.  It uses GNU Build System for build and installation on POSIX\r\nsystems.\r\n\r\nDownloading\r\n===========\r\n\r\nThe latest version of GNU FriBidi may be found at:\r\n\r\n   http://fribidi.org/\r\n\r\nBuilding\r\n========\r\n\r\nSee INSTALL for a description of how to build and install GNU FriBidi.\r\n\r\nLicense\r\n=========\r\n\r\nGNU FriBidi is free software; you can redistribute it and/or\r\nmodify it under the terms of the GNU Lesser General Public License\r\nas published by the Free Software Foundation; either version 2.1\r\nof the License, or (at your option) any later version.\r\n\r\nGNU FriBidi is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with GNU FriBidi, in a file named COPYING; if not, write to the\r\nFree Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\r\nBoston, MA  02110-1301  USA\r\n\r\nFor licensing issues, contact <license@farsiweb.info>.\r\n\r\nImplementation\r\n==============\r\n\r\nThe library implements the algorithm described in the \"Unicode Standard\r\nAnnex #9, The Bidirectional Algorithm\", available at\r\nhttp://www.unicode.org/unicode/reports/tr9/. GNU Fribidi has been tested\r\nexhaustively against the Unicode Reference Code, and to the best of our\r\nknowledge, it completely conforms to the specification, always producing\r\nthe same result as the Reference Code.\r\n\r\nThe library uses Unicode (UTF32) entirely. The character properties are\r\nautomatically extracted from the Unicode data files, available from:\r\n\r\n\thttp://www.unicode.org/Public/UNIDATA/\r\n\r\nThis means that every Unicode character is treated in strict accordance\r\nwith the Unicode specification.\r\n\r\nThere is a limited support for character set conversion from/to the UTF32\r\nencoding.  Data in these character sets must be converted into UTF32 before\r\nthe library may be used.  iconv(3) can always do a better job on that, so you\r\nmay find that the character sets conversion code is typically turned off on\r\nPOSIX machines.\r\n\r\nThe reordering of characters is typically done through the function:\r\n      \r\n     fribidi_boolean\r\n     fribidi_log2vis(/* input */\r\n\t\t     FriBidiChar *str,\r\n\t\t     FriBidiStrIndex len,\r\n\t\t     FriBidiCharType *pbase_dir,\r\n\t\t     /* output */\r\n\t\t     FriBidiChar *visual_str,\r\n\t\t     FriBidiStrIndex *position_L_to_V_list,\r\n\t\t     FriBidiStrIndex *position_V_to_L_list,\r\n\t\t     FriBidiLevel    *embedding_level_list\r\n\t\t     )\r\n    \r\n\r\nwhere\r\n     str                    is the Unicode input string\r\n     len                    is the length of the unicode string\r\n     pbase_dir              is the input and output base direction. If \r\n                            base == FRIBIDI_TYPE_ON then fribidi_log2vis \r\n                            calculates the base direction on its own\r\n                            according to the BiDi algorithm.\r\n     visual_str             The reordered output unicode string.\r\n     position_L_to_V_list   Maps the positions in the logical string to \r\n                            positions in the visual string.\r\n     position_V_to_L_list   Maps the positions in the visual string to \r\n                            the positions in the logical string.\r\n     embedding_level_list   Returns the classification of each character. Even\r\n                            levels indicate LTR characters, and odd levels\r\n                            indicate RTL characters. The main use of this\r\n                            list is in interactive applications when the\r\n                            embedding e.g. level determines cursor display.\r\n\r\nIn any of the output pointers == NULL, then that information is not \r\ncalculated.\r\n\r\nHow it looks like\r\n=================\r\n\r\nHave a look at tests directory, to see some input and outputs, which\r\nCapRTL charset means that CAPITAL letters are right to left, and digits\r\n6, 7, 8, 9 are Arabic digits, try 'fribidi --charsetdesc CapRTL' for the\r\nfull description.\r\n\r\nExecutable\r\n==========\r\n\r\nThere is also a command-line utilitity called fribidi that loops over\r\nthe text of a file and performs the BiDi algorithm on each line, also\r\nused for testing the algorithm. Run fribidi with the --help option to\r\nlearn about usage.  The command-line utility is known to have problems\r\nwith line-breaking and ltov/vtol lists.\r\n\r\nBugs and comments\r\n=================\r\n\r\nReport GNU FriBidi bugs at:\r\n\r\n\thttp://fribidi.org/bug\r\n\r\nAnd send your comments to:\r\n\r\n\tfribidi@freedesktop.org\r\n\r\n\r\nBehdad Esfahbod\r\nbehdad@gnu.org\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}